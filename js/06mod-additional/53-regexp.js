let re0 = new RegExp('ре','gi');
let re1 = /ре/gi; 
console.log('Ехал ГРЕКА через реку'.replace(re1, 'ле'));


/* Напишите регулярное выражение re3, которое будет проверять корректность даты в формате ДД.ММ.ГГГГ. 
ДД - число месяца двумя знаками, ММ - месяц двумя знаками, ГГГГ - год. 
Договоримся, что будем проверять года в диапазоне 2000-2999 */
let re3 = /^(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[012]).2\d{3}$/;

/*
0[1-9]    - 01 02 03 04 05 06 07 08 09
[12][0-9] - 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
[12]\d    - 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
3[01]     - 30 31
1[012]    - 10 11 12
*/

console.log(re3.test('12.12.2025'));
console.log(re3.test('12.12.2029'));
console.log(re3.test('12.12.20251'));
console.log(re3.test('112.12.2025'));
console.log(re3.test('2.12.2025'));
console.log(re3.test('2.2.2025'));
console.log(re3.test('2.02.2025'));
console.log(re3.test('2.02s2025'));
console.log(re3.test('12.2025'));
console.log(re3.test('39.12.2025'));
console.log(re3.test('12.34.2025'));


// let re4 = /[\.\/]/
// console.log('02.04/2022.'.split(re4)); //[]

// let re4 = /(\d{4})#(\d{2})#(\d{2})/;
// const dt = '2022#02#04';
// console.log( dt.replace(re4, '$2.$3.$1') );


//-- Метод test -----------------------------------------------------------------------------------
/*
/ре/.test('Ехал Грека через реку') // true
/ /.test('Ехал Грека через реку') // true
/abc/.test('Ехал Грека через реку') // false

/[abc]/.test('Ехал Грека через реку') // Проверка вхождения одной из букв
/[a-zA-Z]/.test('Ехал Грека через реку')
/[a-z]/i.test('Ехал Грека через реку')
/[а-яёА-ЯЁ]/.test('Ехал Грека через реку')
/[а-яё]/i.test('Ехал Грека через реку')

/[a-z]{4}/.test('qwerty Ехал Грека через реку') // {} - квантивикатор (повторитель)
/[a-z]{3,5}/.test('qwerty Ехал Грека через реку') // от 3 до 5 символов ???
/[a-z]{3,}/.test('qwerty Ехал Грека через реку') // от 3 и более символов
/[a-z]{,3}/.test('qwerty Ехал Грека через реку') // от 0 до 3 символов

/[a-z]{1,}/.test('qwerty')   // [a-z]+ - 1 или более
/[a-z]{0,}/.test('qwerty')   // [a-z]* - 0 или более
/[a-z]{0,1}/.test('qwerty')  // [a-z]? - 0 или 1
/[a-z]{,1}/.test('qwerty')   // [a-z]? - 0 или 1

/[0-9]/.test('01.82.2736')  // любой символ от 0 до 9
/[0-9]/.test('01.82.2736')  // /\d/.test('qwerty')
/\d/.test('01.82.2736')     // любой символ от 0 до 9
/\d+/.test('01.82.2736')
/[0-9]?[]0-9/.test('01.82.2736')
/[0-9]{4}/.test('01.82.2736')
/\d{4}/.test('01.82.2736')

/\w/.test('qwerty')   // /[a-zA-Z0-9_]/.test('qwerty')
/./.test('qwerty')    // .  - Любой символ // true
/\./.test('Qwerty.')  // \. - Символ точки // true

/Грека|Иван/.test('Ехал Грека') // true
/Грека|Иван/.test('Ехал Иван')  // true

/(\d[a-z]{2}){2}/.test('qwerty') // группировка  - (1qw)(7er) 2tr4uq, 0gs8op

// ^ - привязка к началу строки
// $ - привязка к концу строки
/^([а-яёА-ЯЁ]+ ?)+$/.test('Ехал Грека через реку')
*/

//-- Метод replace -----------------------------------------------------------------------------------
/*
'Ехал Грека'.replace(/ре/i, 'ле')
'Ехал Грека'.replace(/(ре)/i, '<strong>$1</strong>') // 'Ехал Г<strong>ре</strong>ка'
'2023/01/31'.replace(/(\d{4})\/(\d{2})\/(\d{2})/g, '$3.$2.$1') // 31.01.2023
*/